import { Injectable, OnModuleInit } from '@nestjs/common';
import { MongoService } from './mongo.service';
import { SeedService } from './seed.service';

@Injectable()
export class AppService implements OnModuleInit {
  constructor(
    private mongoService: MongoService,
    private seedService: SeedService
  ) {}

  async onModuleInit() {
    try {
      const userCount = await this.mongoService.getUserCount();
      if (userCount === 0) {
        console.log('üå± Base de donn√©es vide, lancement du seed automatique...');
        await this.seedService.seedDatabase();
        console.log('üìã Comptes de test cr√©√©s :');
        this.seedService.getTestAccounts().forEach(account => {
          console.log(`   - ${account.role}: ${account.email} / ${account.password}`);
        });
      }
    } catch (error) {
      console.log('‚ö†Ô∏è  Erreur lors du seed automatique:', error.message);
    }
  }

  async getHello(): Promise<string> {
    try {
      const healthCheck = await this.mongoService.healthCheck();
      const userCount = await this.mongoService.getUserCount();
      
      let message = `API TP S√©curit√© - ${healthCheck.database} connect√©e - ${userCount} utilisateur(s)`;
      
      if (userCount > 0) {
        message += '\n\nüìã Comptes de test disponibles:';
        this.seedService.getTestAccounts().forEach(account => {
          message += `\n- ${account.role}: ${account.email} / ${account.password}`;
        });
      }
      
      return message;
    } catch (error) {
      return 'API TP S√©curit√© - Erreur de connexion √† la base de donn√©es';
    }
  }
}
